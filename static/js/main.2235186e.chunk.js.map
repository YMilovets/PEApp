{"version":3,"sources":["components/HOC/withRouter.jsx","components/exercise.js","components/card.js","components/filterSearch.jsx","components/listEx.js","resources.js","components/preloadExercises.js","components/nav.js","components/layout.jsx","App.js","reportWebVitals.js","index.js"],"names":["withRouter","Component","WrappedComponent","props","params","useParams","useSearchParams","searchParams","setSearchParams","displayName","name","ms","threads","state","timeID","step","countDown","items","isPaused","savedStep","savedCountDown","savedTimeID","pauseBtn","createRef","startBtn","startTimerHandler","bind","pauseTimerHandler","document","body","onkeyup","e","key","current","click","context","AudioContext","window","webkitAudioContext","console","log","freq","forEach","elem","push","createOscillator","vol","createGain","length","connect","destination","gain","value","frequency","toString","start","setTimeout","stopThreads","this","map","stop","clearTimeout","oscillator","setState","item","time_pause","delta_time","displayCountDown","pauseStep","checkLastRepeat","count_repeat","time_progress","changeCountTimer","countRepeat","time","setInterval","clearInterval","Error","message","filter","link","id","className","src","img","alt","title","action","disabled","onClick","ref","to","resource","posts","read","card","FilterSearch","onSubmit","autoComplete","placeholder","onChange","preventDefault","query","target","type","pos","search","get","toLowerCase","prevProps","position","styles","transform","style","post","includes","i","wrapPromise","promise","result","status","suspender","then","r","catch","PreloadExercises","tempItem","Navigation","collapse","React","clicked","handleClick","querySelector","setProperty","clientHeight","isActive","classNames","transition","aboutIsActive","Layout","transformItem","fetch","json","App","posSlider","error","isLoad","widthItem","displayWidth","getBoundingClientRect","width","cardWrap","querySelectorAll","arrow","classList","contains","maxDisplayWidthItemOfList","Math","trunc","path","element","index","fallback","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.2235186e.chunk.js","sourcesContent":["import { useParams, useSearchParams } from \"react-router-dom\";\r\nexport const withRouter = (Component) => {\r\n    const WrappedComponent = (props) => {\r\n        const params = useParams();\r\n        const [searchParams, setSearchParams] = useSearchParams();\r\n        // etc... other react-router-dom v6 hooks\r\n        return (\r\n            <Component\r\n                {...props}\r\n                params={params}\r\n                {...{searchParams, setSearchParams}}\r\n            />\r\n        );\r\n    }\r\n    WrappedComponent.displayName = `WrappedComponent(${Component.displayName || Component.name || \"Component\"})`;\r\n    return WrappedComponent;\r\n};","import React, { Component, createRef } from 'react'\r\nimport { Link } from \"react-router-dom\"\r\nimport { withRouter } from \"../components/HOC/withRouter\";\r\n\r\nclass Exercise extends Component {\r\n    /* ToDO: \r\n     * Исправить избыточной шаг после пауз (выполнено).\r\n     * Поставить ограничение на нажатие кнопки Приостановить.\r\n     * При нажатии паузы во время перерыва выполнения упражнения сбрасывать таймер \r\n     * и начинать подсчет выполнения упражнения заново (выполнено).\r\n     */\r\n    constructor(props) {\r\n        super(props);\r\n        this.ms = 1000;\r\n        this.threads = [];                  //Массив звуковых потоков\r\n        this.state = {\r\n            timeID: null,                   //Идентификатор таймера \r\n            step: 0,                        //Шаг выполнения отсчета таймера \r\n            countDown: 0,                   //Секунда текущего шага упражнения\r\n            items: [],                      //Список упражнений\r\n            isPaused: false,                //Проверка на паузу\r\n            savedStep: 0,                   //Сохраненный шаг выполнения отсчета таймера во время паузы\r\n            savedCountDown: 0,              //Сохраненная секунда текущего шага во время паузы\r\n            savedTimeID: null,              //Сохраненный идентификатор таймера\r\n        }\r\n        this.pauseBtn = createRef();\r\n        this.startBtn = createRef();\r\n        this.startTimerHandler = this.startTimerHandler.bind(this);\r\n        this.pauseTimerHandler = this.pauseTimerHandler.bind(this);\r\n    }\r\n    componentDidMount() {\r\n        //Обработка нажатия клавиши для запуска таймера\r\n        document.body.onkeyup = (e) => {\r\n            if (e.key === 'p' || e.key === 'з')\r\n                this.pauseBtn.current && this.pauseBtn.current.click();\r\n            if (e.key === 's' || e.key === 'ы')\r\n                this.startBtn.current && this.startBtn.current.click();\r\n        }\r\n    }\r\n    oscillator(...freq) {\r\n        let context;\r\n        try {\r\n            context = new (AudioContext || window.webkitAudioContext)();\r\n        }\r\n        catch (e) {\r\n            console.log(\"Браузер не поддерживает работу с интерфейсом AudioContent\")\r\n        }\r\n        //Управление громкостью сигнала\r\n        freq.forEach(elem => {\r\n            this.threads.push(context.createOscillator());\r\n            let vol = context.createGain();\r\n\r\n            this.threads[this.threads.length - 1].connect(vol);\r\n            vol.connect(context.destination);\r\n\r\n            vol.gain.value = 0.1;\r\n\r\n            this.threads[this.threads.length - 1].frequency.value = elem.toString();\r\n            this.threads[this.threads.length - 1].start(0);\r\n        });\r\n        setTimeout(() => this.stopThreads(), 100);\r\n    }\r\n    stopThreads() {\r\n        this.threads.map(elem => elem.stop(0));\r\n        this.threads = [];\r\n    }\r\n    //Получение внешних данных с сохранением списка упражнений\r\n    static getDerivedStateFromProps(props, state) {\r\n        return {\r\n            items: props.resource.posts.read()\r\n        }\r\n    }\r\n    componentWillUnmount() {\r\n        clearTimeout(this.state.timeID);\r\n        this.stopThreads();\r\n    }\r\n    pauseStep() {\r\n        //Запуск звукового сигнала паузы между повторениями упражнения или его завершением\r\n        this.oscillator(1633, 941);\r\n        this.setState(\r\n            {\r\n                savedTimeID: null,\r\n                timeID: setTimeout(() => {\r\n                    this.start();\r\n                }, this.ms * (this.item.time_pause + this.state.step * this.item.delta_time) \r\n            )\r\n        })\r\n    }\r\n    start() {\r\n        //Запуск звукового сигнала начала повторения упражнения\r\n        this.oscillator(1209, 852);\r\n        //Запуск метода отображения таймера для тегущего шага\r\n        this.displayCountDown();\r\n        //Записать id таймера в состояние компонента\r\n        this.setState(\r\n            //После окончания повторения упражнения записать новый шаг и запустить таймер паузы\r\n            {\r\n                savedTimeID: null,\r\n                timeID: setTimeout(() => {\r\n                    this.setState(state => {\r\n                        return {\r\n                            step: state.step + 1 //Записать увеличение шага на 1 в состояние компонента\r\n                        }\r\n                    });\r\n                    this.pauseStep();\r\n                    //Определение конца последнего повторения упражнения\r\n                    this.checkLastRepeat(this.state.step, this.item.count_repeat);\r\n                }, this.ms * this.item.time_progress)\r\n            }\r\n        )\r\n    }\r\n    //Метод отображения таймера для тегущего шага\r\n    displayCountDown() {\r\n        this.setState({\r\n            countDown: this.item.time_progress\r\n        });\r\n        //Изменение количества секунд до конца повторения упражнения\r\n        this.changeCountTimer();\r\n    }\r\n    //Проверка на количество повторений, которые больше заданного значения\r\n    checkLastRepeat(step, countRepeat) {  \r\n        if (step >= countRepeat) {\r\n            //Отключить таймер и сбросить значение шага, id таймера и сохраненные параметры по умолчанию\r\n            clearTimeout(this.state.timeID);\r\n            this.setState({\r\n                step: 0,\r\n                timeID: null,\r\n                savedStep: 0,\r\n                savedCountDown: 0,\r\n                savedTimeID: null,\r\n            });\r\n        }\r\n    }\r\n    //Изменение количества секунд до конца повторения упражнения\r\n    changeCountTimer() {\r\n        let time = setInterval(() => {\r\n            this.setState(state => {\r\n                return {\r\n                    countDown: state.countDown - 1\r\n                }\r\n            });\r\n            if (this.state.countDown <= 0) {\r\n                clearInterval(time)\r\n            }\r\n        }, this.ms) \r\n    }\r\n    startTimerHandler() {\r\n        this.state.timeID || this.state.savedTimeID || this.start();\r\n    }\r\n    pauseTimerHandler() {\r\n        //Определяем время паузы и ожидения запуска таймера выполнения упражения\r\n        if (!this.state.timeID && (!this.state.savedTimeID || !this.state.isPaused)) return;\r\n        clearTimeout(this.state.timeID);\r\n        //Сохраняем состояние предыдущего таймера\r\n        this.setState(state => ({            \r\n            savedStep: state.step,\r\n            savedCountDown: state.countDown,\r\n            savedTimeID: state.savedTimeID || state.timeID,\r\n            step: 0,\r\n            timeID: null,\r\n            countDown: 0,\r\n            isPaused: !state.isPaused,\r\n        }));\r\n        //Определяем период паузы таймера\r\n        if (this.state.isPaused) {\r\n            //После окончания повторения упражнения записать новый шаг и запустить таймер паузы\r\n            this.setState(\r\n                {\r\n                    step: this.state.savedStep,\r\n                    countDown: this.state.savedCountDown,\r\n                    savedStep: 0,                //Шаг выполнения отсчета таймера \r\n                    savedCountDown: 0,\r\n                }\r\n            )\r\n            this.changeCountTimer();\r\n            //Пауза запущена на этапе текущего повторения упражнения\r\n            if (this.state.savedCountDown > 0)\r\n                //Записать id таймера в состояние компонента\r\n                this.setState(\r\n                    //После окончания повторения упражнения записать новый шаг и запустить таймер паузы\r\n                    {\r\n                        timeID: setTimeout(() => {\r\n                            this.setState(state => {\r\n                                return {\r\n                                    step: state.step + 1, //Записать увеличение шага на 1 в состояние компонента\r\n                                }\r\n                            });\r\n                            this.pauseStep();\r\n                            //Определение конца последнего повторения упражнения\r\n                            this.checkLastRepeat(this.state.step, this.item.count_repeat);\r\n                        }, this.ms * (this.state.savedCountDown))\r\n                    }\r\n                )\r\n            else {\r\n                //Пауза запущена в перерыве между повторениями\r\n                setTimeout(() => {\r\n                    this.start();\r\n                }, this.ms * 3)\r\n            }\r\n        }\r\n    }\r\n    render() {\r\n        try {\r\n            if (this.state.items === \"error\") \r\n                throw new Error(\"Не удается поключиться к json-файлу\")\r\n        } catch (e) {\r\n            return <p>{e.message}</p>\r\n        }\r\n\r\n        this.item = this.state.items.filter(value => value.link === this.props.params.id)[0]\r\n        if (!this.item) //Проверка на наличие упражнения, указанного в параметре id адресной строки\r\n            return (\r\n                <>\r\n                    <p>Данного упражнения не существует</p>\r\n                    <Link to=\"/\" className=\"btn btn-primary\">Вернуться на главную</Link>\r\n                </>\r\n            )\r\n        return (\r\n            <div className=\"d-flex ex-wrap\">\r\n                <img className=\"ex-img-top img-thumbnail\" src={this.item.img} alt=\"Здесь рыбы нет\"></img>\r\n                <div className=\"ms-3\">\r\n                    <h3>{this.item.title}</h3>\r\n                    <p>{this.item.action}</p>\r\n                    {this.state.timeID || this.state.savedTimeID ? \r\n                        <>\r\n                            <div className=\"d-flex\">\r\n                                <div className=\"\">\r\n                                    <small>Время окончания <br />повторения</small>\r\n                                    <h1 className=\"display-3\">\r\n                                        {this.state.countDown > 0 ? this.state.countDown : \"❚❚\"}\r\n                                    </h1>\r\n                                </div>\r\n                                <div className=\"ms-3\">\r\n                                    <small>Количество выполненных <br />повторений</small>\r\n                                    <h1 className=\"display-3\">{this.state.step || this.state.savedStep}</h1>\r\n                                </div>\r\n                            </div>\r\n                            {!this.state.timeID && !this.state.isPaused && \r\n                                <div className=\"mb-3\">\r\n                                    <small>Приготовьтесь к выполнению повторения выбранного упражнения</small>\r\n                                </div>}\r\n                        </>\r\n                    : \"\"}\r\n\r\n                    <div>\r\n                        <button \r\n                            className=\"btn btn-primary\" \r\n                            disabled={this.state.timeID || this.state.savedTimeID} \r\n                            onClick={this.startTimerHandler}\r\n                            ref={this.startBtn}>\r\n                            ▷ Запустить (S)\r\n                        </button>\r\n                        <button className=\"btn btn-primary ms-3\" \r\n                            disabled={!this.state.timeID && (!this.state.savedTimeID || !this.state.isPaused)} \r\n                            onClick={this.pauseTimerHandler}\r\n                            ref={this.pauseBtn}>\r\n                            ❚❚ {!this.state.isPaused ? 'Приостановить' : 'Продолжить'} (P)\r\n                        </button>\r\n                    </div>\r\n                </div>  \r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default withRouter(Exercise, () => {\r\n    \r\n});","import React, { Component } from 'react'\r\nimport { Link } from \"react-router-dom\";\r\nexport default class card extends Component {\r\n    render() {\r\n        const {item} = this.props;\r\n        return (\r\n            <div className=\"me-3 card-wrapper\">\r\n                <div className=\"card\">\r\n                    <img className=\"card-img-top\" src={item.img} alt=\"Здесь рыбы нет\"></img>\r\n                    <div className=\"card-body d-flex justify-content-between flex-column\">\r\n                        <div className=\"card-content mb-3\">\r\n                            <h5 className=\"card-title\">{item.title}</h5>\r\n                            <p className=\"card-text\">{item.action}</p>\r\n                        </div>\r\n                        <Link to={\"exercise/\" + item.link} className=\"btn btn-primary\">Выбрать</Link>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n","import React from 'react'\r\n\r\nexport default function FilterSearch(props) {        \r\n    const handleSubmit = (e) => {\r\n        e.preventDefault();\r\n        \r\n        const query = e.target.value;\r\n        const {setSearchParams} = props;\r\n        setSearchParams({query});\r\n    }\r\n    const handleReset = () => props.setSearchParams({query: \"\"});\r\n    return (\r\n        <form onSubmit={null} className=\"d-flex mt-3 position-relative\" autoComplete=\"off\">\r\n            <input placeholder=\"Начните вводить название упражнения\" \r\n                onChange={handleSubmit} \r\n                className=\"form-control\" \r\n                type=\"text\" \r\n                name=\"search\" />\r\n            <button onClick={handleReset} \r\n                type=\"reset\" \r\n                className=\"btn-close position-absolute top-50 end-0 translate-middle\" \r\n                aria-label=\"Close\"></button>\r\n        </form>\r\n    )\r\n}\r\n","import React, { Component } from 'react'\r\nimport Card from \"./card\"\r\nimport { withRouter } from './HOC/withRouter';\r\nimport FilterSearch from \"./filterSearch\";\r\n\r\nclass ListEx extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            pos: props.pos,\r\n            items: [],\r\n            search: \"\"\r\n        }\r\n    }\r\n    //Записать состояние items из props и отслеживать изменение props.resource\r\n    static getDerivedStateFromProps(props, state) {\r\n        return {\r\n            items: props.resource.posts.read()\r\n        }\r\n    }\r\n    componentDidMount() {\r\n        //Сравнение текущего props с предыдущим значением\r\n        const {searchParams} = this.props;\r\n        //Для хранения состояния поиска убираем чувствительность регистра\r\n        this.setState({\r\n            search: searchParams.get(\"query\") ? searchParams.get(\"query\").toLowerCase() : \"\"\r\n        });\r\n    }\r\n    componentDidUpdate(prevProps) {\r\n        //Сравнение текущего props с предыдущим значением\r\n        if (this.props !== prevProps) {\r\n            let position = this.props.pos\r\n            this.setState({pos: position})\r\n            const {searchParams} = this.props;\r\n            //Для хранения состояния поиска убираем чувствительность регистра\r\n            this.setState({\r\n                search: searchParams.get(\"query\") ? searchParams.get(\"query\").toLowerCase() : \"\"\r\n            });\r\n        }\r\n    }\r\n\r\n    render() {\r\n        try {\r\n            if (this.state.items === \"error\") \r\n                throw new Error(\"Не удается подключиться к json-файлу\")\r\n        } catch (e) {\r\n            return <p>{e.message}</p>\r\n        }\r\n        const styles = {\r\n            transform: `translateX(${this.state.pos}px)`\r\n        }\r\n        return (\r\n            <>\r\n                <FilterSearch {...this.props} />\r\n                <div style={styles} className=\"list-exercises\">\r\n                    <div className=\"g-4 mt-3 d-inline-flex overflow-hidden card-deck\">\r\n                        { \r\n                            this.state.items\r\n                                .filter( post => post.title.toLowerCase().includes(this.state.search) || !this.state.search ) \r\n                                .map((item, i) => <Card key={i} item={item} /> ) \r\n                        }\r\n                    </div>\r\n                </div>\r\n            </>\r\n\r\n        )\r\n    }\r\n}\r\n\r\nexport default withRouter(ListEx);","export default function UseResource() {\r\n    return {\r\n        posts: wrapPromise(fetchPosts())\r\n    }\r\n}\r\nfunction fetchPosts() {\r\n    const src = \"https://ymilovets.github.io/storageJSON/exercises.json\";\r\n    return fetch(src).then(result => result.json()); \r\n}\r\nfunction wrapPromise(promise) {\r\n    let status = \"pending\", result;\r\n    const suspender = promise.then( r => {\r\n        result = r;\r\n        status = \"success\"\r\n    }).catch( e => {\r\n        result = \"Не удается поключиться к json-файлу\";\r\n        status = \"error\"   \r\n    })\r\n\r\n    return {\r\n        read() {\r\n            switch (status) {\r\n                case \"pending\":\r\n                    throw suspender;\r\n                case \"error\":\r\n                    return status;\r\n                case \"success\":\r\n                    return result;\r\n                default:\r\n                    throw suspender;\r\n            }\r\n        }\r\n    }\r\n}","import React from 'react'\r\nimport Card from \"./card\"\r\n\r\nexport default function PreloadExercises() {\r\n    const tempItem = {\r\n        title: \"Lorem ipsum dolor sit amet\",\r\n        action: \"Sed malesuada eget leo in tincidunt. Vestibulum ante ipsum primis in faucibus orci luctus et ultrices posuere cubilia curae; Sed pharetra sit amet ante at posuere. Integer ut arcu ac odio porttitor cursus.\",\r\n        link: \"/\",\r\n        img: \"/\"\r\n      }\r\n    return (\r\n        <div className=\"list-exercises\">\r\n            <div className=\"g-4 mt-2 d-inline-flex overflow-hidden card-deck\">\r\n                <Card item={tempItem} /><Card item={tempItem} /><Card item={tempItem} />\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n","import React, { Component } from \"react\"\r\nimport { Link, NavLink } from \"react-router-dom\";\r\n\r\nexport default class Navigation extends Component {\r\n    //Конструктор класса для определения его состояния\r\n    constructor(props) {\r\n        super(props);\r\n        \t\r\n        this.collapse = React.createRef();\r\n        //Объект состояния компонента\r\n        this.state = {\r\n            clicked: false\r\n        }\r\n        this.handleClick = this.handleClick.bind(this);\r\n    }\r\n    handleClick() {\r\n        //Обновление состояния конструктора this.state\r\n        this.setState({\r\n            clicked: !this.state.clicked\r\n        });\r\n    }\r\n    //Добавление CSS-переменных после рендеринга компонента на html-странице\r\n    componentDidMount() {\r\n        let root = document.querySelector(\":root\");\r\n        //Определяем длину всплывающего меню и добавляем его в CSS-переменную\r\n        root.style.setProperty('--collapse-height', this.collapse.current.clientHeight + \"px\");\r\n    }\r\n    aboutIsActive(isActive, classNames) {\r\n        return `${classNames} ${isActive && \"disabled\"}`\r\n    }\r\n    render() {\r\n        return (\r\n            <>\r\n                <nav id=\"navigation\" className=\"navbar navbar-dark\">\r\n                    <div className=\"d-flex\">\r\n                        <button onClick={this.handleClick} className=\"btn bg-primary\" type=\"button\" data-toggle=\"collapse\" data-target=\"#collapse-menu\" >\r\n                            <span className=\"navbar-toggler-icon\"></span>\r\n                        </button>\r\n                        <div className=\"logo ms-3\">\r\n                            <Link className=\"navbar-brand text-dark fw-bold\" to=\"/\">PEApp</Link>\r\n                            <div className=\"small\">Движение - жизнь</div>\r\n                        </div>\r\n                    </div>\r\n        \r\n                    <div>\r\n                        <button type=\"submit\" className=\"slider_left btn btn-primary me-2\" onClick={this.props.transition}>&lt;</button>\r\n                        <button type=\"submit\" className=\"slider_right btn btn-primary\" onClick={this.props.transition}>&gt;</button>          \r\n                    </div>\r\n                </nav>\r\n                <div className={(this.state.clicked) ? \"active compact-menu\" : \"compact-menu\" } id=\"collapse-menu\">\r\n                    <ul className=\"navbar-nav\" ref={this.collapse}>\r\n                        <li className=\"nav-item\">\r\n                            <NavLink \r\n                                className={ ({ isActive }) => \r\n                                    this.aboutIsActive(isActive, \"nav-link\")} \r\n                                to=\"about\">О приложении</NavLink>\r\n                        </li>\r\n                    </ul>\r\n                </div>\r\n            </>\r\n        );\r\n    }\r\n\r\n}","import React from 'react'\r\nimport { Outlet } from 'react-router';\r\nimport Navigation from './nav';\r\n\r\nexport const Layout = ({transformItem}) => {\r\n    return (\r\n        <>\r\n            <Navigation transition={transformItem}/>\r\n            <Outlet />\r\n        </>\r\n    )\r\n}\r\n","import 'bootstrap/dist/css/bootstrap.min.css';\r\nimport 'bootstrap/dist/js/bootstrap.esm.js';\r\nimport React, { Suspense, Component } from \"react\";\r\nimport Exercise from \"./components/exercise\"\r\nimport ListPE from \"./components/listEx\"\r\nimport UseResource from \"./resources\"\r\nimport PreloadExercises from './components/preloadExercises';\r\n\r\nimport \"./index.css\"\r\nimport {\r\n  HashRouter as Router,\r\n  Routes as Switch,\r\n  Route\r\n} from \"react-router-dom\";\r\nimport { Layout } from './components/layout';\r\n\r\nconst resource = UseResource()\r\n\r\nexport default class App extends Component {\r\n  constructor(props) {\r\n    super(props)\r\n    this.state = {\r\n      posSlider: 0,           //Положение слайдера, определенный CSS-свойством transform: translateX\r\n      error: null,            //Информация об ошибках в результате запроса JSON\r\n      isLoad: false,          //Состояние выполнения запроса загрузки\r\n    };\r\n    this.transformItem = this.transformItem.bind(this);\r\n  }\r\n  \r\n  transformItem(e) {\r\n    e.preventDefault();\r\n    const widthItem = 316; //Ширина блока слайдера\r\n    const displayWidth = document.querySelector(\".list-exercises\").getBoundingClientRect().width;\r\n    const marginItem = 16;\r\n    const cardWrap = document.querySelectorAll(\".list-exercises .card-wrapper\");\r\n    this.arrow = (e.target.classList.contains(\"slider_right\")) ? \"right\": \"left\";\r\n    let position = 0; //Результат смещения позиции слайдов, определенный направлением перемещения\r\n    //Если нажата кнопка \"Сдвинуть вправо\"\r\n    if (this.arrow === \"right\") {\r\n      //Ограничение начального значения положения слайдера для сдвига вправо\r\n      if ( this.state.posSlider )\r\n        position = widthItem;\r\n      else position = 0;\r\n    } //Если нажата кнопка \"Сдвинуть влево\"\r\n    else {\r\n      //Ограничение конечного значения положения слайдера для сдвига влево\r\n      //Определим ширину максимального количества элементов слайдера, помещающихся на странице\r\n      const maxDisplayWidthItemOfList = Math.trunc(displayWidth / widthItem) * (widthItem + marginItem);\r\n      if ( -this.state.posSlider >= cardWrap.length * widthItem - maxDisplayWidthItemOfList )\r\n        position = 0;\r\n      else position = -widthItem\r\n    }\r\n    this.setState(state => { \r\n      return {\r\n        posSlider: state.posSlider + position,\r\n      } \r\n    })\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"AppFitness overflow-hidden p-4\">\r\n        <Router>\r\n          <Switch>\r\n            <Route path=\"/\" element={\r\n              <Layout transformItem={this.transformItem} />\r\n            } >\r\n              <Route index \r\n                element = {\r\n                  <Suspense fallback={<PreloadExercises />}>\r\n                    <ListPE pos={this.state.posSlider} resource={resource} />      \r\n                  </Suspense> \r\n                } \r\n              />\r\n              <Route path=\"exercise/:id\" \r\n                element = {\r\n                  <Suspense fallback={<p>Loading...</p>}>\r\n                    <Exercise resource={resource} />\r\n                  </Suspense>\r\n                } \r\n              />  \r\n              <Route path=\"*\" element={ <p>NotFound</p> } />\r\n            </Route>\r\n          </Switch>\r\n        </Router>\r\n      </div>\r\n    )\r\n  }\r\n}","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport PEApp from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <PEApp />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}